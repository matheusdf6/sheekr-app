// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sheekr.Data;

namespace Sheekr.Data.Migrations
{
    [DbContext(typeof(SheekrDbContext))]
    partial class SheekrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sheekr.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnName("AlunoId");

                    b.Property<bool>("FazDemonstracao")
                        .HasColumnType("bit");

                    b.Property<bool>("FazDiscurso")
                        .HasColumnType("bit");

                    b.Property<bool>("FazLeitura")
                        .HasColumnType("bit");

                    b.Property<int>("PublicadorId");

                    b.HasKey("AlunoId");

                    b.HasIndex("PublicadorId")
                        .IsUnique();

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Congregacao", b =>
                {
                    b.Property<int>("CongregacaoId")
                        .HasColumnName("CongregacaoId");

                    b.HasKey("CongregacaoId");

                    b.ToTable("Congregacoes");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Designacao", b =>
                {
                    b.Property<int>("DesignacaoId")
                        .HasColumnName("DesignacaoId");

                    b.Property<int?>("AlunoAjudanteId");

                    b.Property<int>("AlunoPrincipalId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("LicaoId");

                    b.Property<short>("Local")
                        .HasColumnType("smallint");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint");

                    b.HasKey("DesignacaoId");

                    b.HasIndex("AlunoAjudanteId");

                    b.HasIndex("AlunoPrincipalId");

                    b.HasIndex("LicaoId");

                    b.ToTable("Designacoes");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Dirigente", b =>
                {
                    b.Property<int>("DirigenteId")
                        .HasColumnName("DirigenteId");

                    b.Property<int>("PublicadorId");

                    b.HasKey("DirigenteId");

                    b.HasIndex("PublicadorId")
                        .IsUnique();

                    b.ToTable("Dirigentes");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.DiscursoFora", b =>
                {
                    b.Property<int>("DiscursoForaId")
                        .HasColumnName("DiscursoLocalId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("OradorForaId");

                    b.Property<int>("TemaId");

                    b.HasKey("DiscursoForaId");

                    b.HasIndex("OradorForaId");

                    b.HasIndex("TemaId");

                    b.ToTable("Discursos_Fora");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.DiscursoLocal", b =>
                {
                    b.Property<int>("DiscursoLocalId")
                        .HasColumnName("DiscursoLocalId");

                    b.Property<int>("CongregacaoId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("OradorId");

                    b.Property<int>("TemaId");

                    b.HasKey("DiscursoLocalId");

                    b.HasIndex("CongregacaoId");

                    b.HasIndex("OradorId");

                    b.HasIndex("TemaId");

                    b.ToTable("Discursos_Locais");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Licao", b =>
                {
                    b.Property<int>("LicaoId")
                        .HasColumnName("LicaoId");

                    b.Property<string>("TituloLicao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("LicaoId");

                    b.ToTable("Licoes");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.OradorFora", b =>
                {
                    b.Property<int>("OradorId")
                        .HasColumnName("OradorId");

                    b.Property<int>("CongregacaoId");

                    b.Property<string>("Email")
                        .HasColumnType("varchar")
                        .HasMaxLength(50);

                    b.Property<short>("EscolhaContato")
                        .HasColumnType("smallint");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar")
                        .HasMaxLength(11);

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.HasKey("OradorId");

                    b.HasIndex("CongregacaoId");

                    b.ToTable("Oradores_Fora");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.OradorLocal", b =>
                {
                    b.Property<int>("OradorId")
                        .HasColumnName("OradorId");

                    b.Property<int>("CongregacaoId");

                    b.Property<int>("PublicadorId");

                    b.HasKey("OradorId");

                    b.HasIndex("CongregacaoId");

                    b.HasIndex("PublicadorId")
                        .IsUnique();

                    b.ToTable("Oradores_Locais");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Publicador", b =>
                {
                    b.Property<int>("PublicadorId")
                        .HasColumnName("PublicadorId");

                    b.Property<string>("Email")
                        .HasMaxLength(60);

                    b.Property<string>("PrimeiroNome")
                        .IsRequired();

                    b.Property<int>("Privilegio");

                    b.Property<int>("Sexo");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11);

                    b.Property<string>("UltimoNome")
                        .IsRequired();

                    b.HasKey("PublicadorId");

                    b.ToTable("Publicadores");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Saida", b =>
                {
                    b.Property<int>("SaidaId")
                        .HasColumnName("SaidaId");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<int>("DirigenteId");

                    b.Property<int>("TerritorioId");

                    b.HasKey("SaidaId");

                    b.HasIndex("DirigenteId");

                    b.HasIndex("TerritorioId");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Tema", b =>
                {
                    b.Property<int>("TemaId");

                    b.Property<string>("TituloTema")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("TemaId");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Territorio", b =>
                {
                    b.Property<int>("TerritorioId")
                        .HasColumnName("TerritorioId");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(100);

                    b.Property<int>("Local")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagem")
                        .HasMaxLength(100);

                    b.HasKey("TerritorioId");

                    b.ToTable("Territorios");
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Publicador", "DadosPublicador")
                        .WithOne("Aluno")
                        .HasForeignKey("Sheekr.Domain.Entities.Aluno", "PublicadorId")
                        .HasConstraintName("FK_Aluno_Publicador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Congregacao", b =>
                {
                    b.OwnsOne("Sheekr.Domain.Entities.NomeCongregacao", "NomeCongregacao", b1 =>
                        {
                            b1.Property<int>("CongregacaoId");

                            b1.Property<string>("Cidade");

                            b1.Property<string>("NomeLocal");

                            b1.HasKey("CongregacaoId");

                            b1.ToTable("Congregacoes");

                            b1.HasOne("Sheekr.Domain.Entities.Congregacao")
                                .WithOne("NomeCongregacao")
                                .HasForeignKey("Sheekr.Domain.Entities.NomeCongregacao", "CongregacaoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Designacao", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Aluno", "AlunoAjudante")
                        .WithMany("DesignacoesAjudante")
                        .HasForeignKey("AlunoAjudanteId")
                        .HasConstraintName("FK_Designacoes_Aluno_AlunoAjudante")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sheekr.Domain.Entities.Aluno", "AlunoPrincipal")
                        .WithMany("DesignacoesPrincipal")
                        .HasForeignKey("AlunoPrincipalId")
                        .HasConstraintName("FK_Designacoes_Aluno_AlunoPrincipal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sheekr.Domain.Entities.Licao", "Licao")
                        .WithMany()
                        .HasForeignKey("LicaoId")
                        .HasConstraintName("FK_Designacao_Licao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Dirigente", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Publicador", "DadosPublicador")
                        .WithOne("Dirigente")
                        .HasForeignKey("Sheekr.Domain.Entities.Dirigente", "PublicadorId")
                        .HasConstraintName("FK_Dirigente_Publicador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.DiscursoFora", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.OradorFora", "OradorFora")
                        .WithMany()
                        .HasForeignKey("OradorForaId")
                        .HasConstraintName("FK_DiscursoFora_OradorFora")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sheekr.Domain.Entities.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaId")
                        .HasConstraintName("FK_DiscursoFora_Tema")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.DiscursoLocal", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Congregacao", "Congregacao")
                        .WithMany()
                        .HasForeignKey("CongregacaoId")
                        .HasConstraintName("FK_DiscursoLocal_Congregacao")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sheekr.Domain.Entities.OradorLocal", "OradorLocal")
                        .WithMany("DiscursosFeitos")
                        .HasForeignKey("OradorId")
                        .HasConstraintName("FK_DiscursoLocal_OradorLocal")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sheekr.Domain.Entities.Tema", "Tema")
                        .WithMany()
                        .HasForeignKey("TemaId")
                        .HasConstraintName("FK_DiscursoLocal_Tema")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.OradorFora", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Congregacao", "Congregacao")
                        .WithMany()
                        .HasForeignKey("CongregacaoId")
                        .HasConstraintName("FK_OradorFora_Congregacao")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.OradorLocal", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Congregacao", "Congregacao")
                        .WithMany("OradoresLocais")
                        .HasForeignKey("CongregacaoId")
                        .HasConstraintName("FK_OradorLocal_Congregacao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sheekr.Domain.Entities.Publicador", "DadosPublicador")
                        .WithOne("Orador")
                        .HasForeignKey("Sheekr.Domain.Entities.OradorLocal", "PublicadorId")
                        .HasConstraintName("FK_OradorLocal_Publicador")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheekr.Domain.Entities.Saida", b =>
                {
                    b.HasOne("Sheekr.Domain.Entities.Dirigente", "Dirigente")
                        .WithMany("Saidas")
                        .HasForeignKey("DirigenteId")
                        .HasConstraintName("FK_Saida_Dirigente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sheekr.Domain.Entities.Territorio", "Territorio")
                        .WithMany("DiasTrabalhados")
                        .HasForeignKey("TerritorioId")
                        .HasConstraintName("FK_Saida_Territorio")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
